package net.daum.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import net.daum.service.ReplyService;
import net.daum.vo.ReplyVO;

// 2024-12-02 댓글 컨트롤러 코드 작성

@RestController
// @RestController 추가 하면 해당 컨트롤러는 REST API 서비스 프로그램을 개발 가능한 컨트롤러
@RequestMapping("/replies")
// 컨트롤 자체 매핑주소 replies 등록
public class ReplyController {
	
	@Autowired
	private ReplyService replyService;
	
	// 댓글 등록
	@PostMapping("/insertReply")
	public ResponseEntity<String> insertRely(@RequestBody ReplyVO vo) {
		// @RequestBody 애노테이션은 전송된 키, 값 쌍의 JSON데이터를 ReplyVO 객체타입으로 변환
		
		ResponseEntity<String> entity = null;
		
		try {
			this.replyService.addReply(vo);// 댓글등록
			entity = new ResponseEntity<String>("SUCCESS", HttpStatus.OK);
			// 댓글 저장 성공시 정상상태코드 200과 SUCCESS 가 반환된다.
		} catch(Exception e) {
			e.printStackTrace();
			entity = new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);
			// 예외 에러가 발생했을때 에러메시지와 HTTP 상태코드 문자열이 반환한다.
		}
		
		return entity;
		
	} // insertReply()
	
}
