package net.daum.controller;

import java.io.File;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import jakarta.servlet.http.HttpServletRequest;


// 2024-12-06 게시판 첨부파일(이진파일) 관련 Upload Code 작성 

@Controller
@RequestMapping("/bbs")
public class UploadController {
	
	@GetMapping("/uploadForm")
	public void uploadForm() {
		// 리턴타입이 없는 void 타입이면 매핑 주소인 /uploadForm View 페이지 파일명으로 설정된다.
	}
	
	@PostMapping("/uploadFormOK")
	public void uploadFormOK(MultipartFile[] uploadFile, Model model, HttpServletRequest request) {
		/*
		 * 스프링에서 MultipartFile 타입 API를 제공해서 업로드 되는 파일 데이터를 쉽게 처리한다. 다중 업로드 파일은 배열로 받는다
		 * <input type="file" name="uploadFile" />의 네임파라미터이름 uploadFile과 매개변수명은 같게 지정한다.
		 */
		
		String uploadFolder = request.getSession().getServletContext().getRealPath("upload");
		// 업로드 된 첨부파일을 저장할 실제 경로를 반환
		
		System.out.println("첨부파일 경로 : " + uploadFolder);
		
		for(MultipartFile multipartFile:uploadFile) {
			System.out.println("==============================================>");
			System.out.println("UpLoad File Name : "+multipartFile.getOriginalFilename());
			// 업로드 된 원래 원본 파일 명
			
			System.out.println("Upload File Size : "+multipartFile.getSize());
			// 업로드 파일 크기
			
			File saveFile = new File(uploadFolder, multipartFile.getOriginalFilename());
			
			try {
				multipartFile.transferTo(saveFile);
				// 업로드 되는 원래 파일명으로 upload폴더에 실제 업로드
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}
	
	// 비동기식 이진파일 업로드 폼
	@GetMapping("/uploadAjax")
	public void uploadAjax() {
		
	}
	
}
